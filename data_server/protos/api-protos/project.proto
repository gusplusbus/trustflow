syntax = "proto3";
package trustflow.project.v1;

option go_package = "github.com/gusplusbus/trustflow/data_server/gen/projectv1;projectv1";

enum SortBy {
  SORT_BY_UNSPECIFIED = 0;
  SORT_BY_CREATED_AT  = 1;
  SORT_BY_UPDATED_AT  = 2;
  SORT_BY_TITLE       = 3;
  SORT_BY_TEAM_SIZE   = 4;
  SORT_BY_DURATION    = 5; // duration_estimate
}
enum SortDir {
  SORT_DIR_UNSPECIFIED = 0;
  SORT_DIR_ASC  = 1;
  SORT_DIR_DESC = 2;
}


message HealthRequest {}
message HealthResponse { string status = 1; }

message Project {
  string id = 1;
  string created_at = 2; // RFC3339
  string updated_at = 3;
  string title = 4;
  string description = 5;
  int32  duration_estimate = 6;
  int32  team_size = 7;
  string application_close_time = 8;
}

/* CREATE */
message CreateProjectRequest {
  string user_id = 1;
  string title = 2;
  string description = 3;
  int32  duration_estimate = 4;
  int32  team_size = 5;
  string application_close_time = 6;
}
message CreateProjectResponse { Project project = 1; }

/* GET */
message GetProjectRequest {
  string user_id = 1;
  string id = 2;
}
message GetProjectResponse { Project project = 1; }

/* UPDATE (full update for simplicity) */
message UpdateProjectRequest {
  string user_id = 1;
  string id = 2;
  string title = 3;
  string description = 4;
  int32  duration_estimate = 5;
  int32  team_size = 6;
  string application_close_time = 7;
}
message UpdateProjectResponse { Project project = 1; }

/* DELETE */
message DeleteProjectRequest {
  string user_id = 1;
  string id = 2;
}
message DeleteProjectResponse { bool deleted = 1; }

/* list */
message ListProjectsRequest {
  string user_id = 1;
  int32 page = 2;        // 0-based
  int32 page_size = 3;   // 1..200
  SortBy sort_by = 4;    // default CREATED_AT
  SortDir sort_dir = 5;  // default DESC
  string q = 6;          // search text across title/description
}
message ListProjectsResponse {
  repeated Project projects = 1;
  int64 total = 2;
}
service ProjectService {
  rpc Health(HealthRequest) returns (HealthResponse);
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse);
  rpc GetProject(GetProjectRequest) returns (GetProjectResponse);
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse);
  rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse);
  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse);
}
