// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: issue_timeline.proto

package issuetimelinev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhIssueId int64 `protobuf:"varint,1,opt,name=gh_issue_id,json=ghIssueId,proto3" json:"gh_issue_id,omitempty"` // GitHub numeric issue id (stable)
}

func (x *GetCheckpointRequest) Reset() {
	*x = GetCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_timeline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckpointRequest) ProtoMessage() {}

func (x *GetCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_timeline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckpointRequest.ProtoReflect.Descriptor instead.
func (*GetCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_issue_timeline_proto_rawDescGZIP(), []int{0}
}

func (x *GetCheckpointRequest) GetGhIssueId() int64 {
	if x != nil {
		return x.GhIssueId
	}
	return 0
}

type GetCheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor    string                 `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"` // GraphQL endCursor; empty means "start"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetCheckpointResponse) Reset() {
	*x = GetCheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_timeline_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckpointResponse) ProtoMessage() {}

func (x *GetCheckpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issue_timeline_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckpointResponse.ProtoReflect.Descriptor instead.
func (*GetCheckpointResponse) Descriptor() ([]byte, []int) {
	return file_issue_timeline_proto_rawDescGZIP(), []int{1}
}

func (x *GetCheckpointResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *GetCheckpointResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TimelineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider        string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`                                        // "github"
	ProviderEventId string                 `protobuf:"bytes,2,opt,name=provider_event_id,json=providerEventId,proto3" json:"provider_event_id,omitempty"` // GraphQL node id (unique)
	IssueNodeId     string                 `protobuf:"bytes,3,opt,name=issue_node_id,json=issueNodeId,proto3" json:"issue_node_id,omitempty"`             // GraphQL issue node id
	Type            string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                                // IssueComment, AssignedEvent, etc.
	Actor           string                 `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	PayloadJson     []byte                 `protobuf:"bytes,7,opt,name=payload_json,json=payloadJson,proto3" json:"payload_json,omitempty"` // raw node minus obvious fields
}

func (x *TimelineItem) Reset() {
	*x = TimelineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_timeline_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimelineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimelineItem) ProtoMessage() {}

func (x *TimelineItem) ProtoReflect() protoreflect.Message {
	mi := &file_issue_timeline_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimelineItem.ProtoReflect.Descriptor instead.
func (*TimelineItem) Descriptor() ([]byte, []int) {
	return file_issue_timeline_proto_rawDescGZIP(), []int{2}
}

func (x *TimelineItem) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *TimelineItem) GetProviderEventId() string {
	if x != nil {
		return x.ProviderEventId
	}
	return ""
}

func (x *TimelineItem) GetIssueNodeId() string {
	if x != nil {
		return x.IssueNodeId
	}
	return ""
}

func (x *TimelineItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TimelineItem) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

func (x *TimelineItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TimelineItem) GetPayloadJson() []byte {
	if x != nil {
		return x.PayloadJson
	}
	return nil
}

type AppendBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhIssueId int64           `protobuf:"varint,1,opt,name=gh_issue_id,json=ghIssueId,proto3" json:"gh_issue_id,omitempty"`
	Items     []*TimelineItem `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
	EndCursor string          `protobuf:"bytes,20,opt,name=end_cursor,json=endCursor,proto3" json:"end_cursor,omitempty"` // advance checkpoint atomically with inserts
}

func (x *AppendBatchRequest) Reset() {
	*x = AppendBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_timeline_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendBatchRequest) ProtoMessage() {}

func (x *AppendBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_timeline_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendBatchRequest.ProtoReflect.Descriptor instead.
func (*AppendBatchRequest) Descriptor() ([]byte, []int) {
	return file_issue_timeline_proto_rawDescGZIP(), []int{3}
}

func (x *AppendBatchRequest) GetGhIssueId() int64 {
	if x != nil {
		return x.GhIssueId
	}
	return 0
}

func (x *AppendBatchRequest) GetItems() []*TimelineItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AppendBatchRequest) GetEndCursor() string {
	if x != nil {
		return x.EndCursor
	}
	return ""
}

type AppendBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inserted     uint32 `protobuf:"varint,1,opt,name=inserted,proto3" json:"inserted,omitempty"`
	LatestCursor string `protobuf:"bytes,2,opt,name=latest_cursor,json=latestCursor,proto3" json:"latest_cursor,omitempty"`
}

func (x *AppendBatchResponse) Reset() {
	*x = AppendBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_timeline_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendBatchResponse) ProtoMessage() {}

func (x *AppendBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issue_timeline_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendBatchResponse.ProtoReflect.Descriptor instead.
func (*AppendBatchResponse) Descriptor() ([]byte, []int) {
	return file_issue_timeline_proto_rawDescGZIP(), []int{4}
}

func (x *AppendBatchResponse) GetInserted() uint32 {
	if x != nil {
		return x.Inserted
	}
	return 0
}

func (x *AppendBatchResponse) GetLatestCursor() string {
	if x != nil {
		return x.LatestCursor
	}
	return ""
}

var File_issue_timeline_proto protoreflect.FileDescriptor

var file_issue_timeline_proto_rawDesc = []byte{
	0x0a, 0x14, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0b, 0x67, 0x68, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x67, 0x68, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x22, 0x6a, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x82, 0x02, 0x0a, 0x0c, 0x54, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0x95,
	0x01, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x68, 0x5f, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x68, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x64,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x56, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x32, 0x85,
	0x02, 0x0a, 0x15, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x72, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x30, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x75, 0x73, 0x70, 0x6c, 0x75, 0x73, 0x62, 0x75, 0x73, 0x2f,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x76, 0x31, 0x3b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_issue_timeline_proto_rawDescOnce sync.Once
	file_issue_timeline_proto_rawDescData = file_issue_timeline_proto_rawDesc
)

func file_issue_timeline_proto_rawDescGZIP() []byte {
	file_issue_timeline_proto_rawDescOnce.Do(func() {
		file_issue_timeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_issue_timeline_proto_rawDescData)
	})
	return file_issue_timeline_proto_rawDescData
}

var file_issue_timeline_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_issue_timeline_proto_goTypes = []any{
	(*GetCheckpointRequest)(nil),  // 0: trustflow.issues_timeline.v1.GetCheckpointRequest
	(*GetCheckpointResponse)(nil), // 1: trustflow.issues_timeline.v1.GetCheckpointResponse
	(*TimelineItem)(nil),          // 2: trustflow.issues_timeline.v1.TimelineItem
	(*AppendBatchRequest)(nil),    // 3: trustflow.issues_timeline.v1.AppendBatchRequest
	(*AppendBatchResponse)(nil),   // 4: trustflow.issues_timeline.v1.AppendBatchResponse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_issue_timeline_proto_depIdxs = []int32{
	5, // 0: trustflow.issues_timeline.v1.GetCheckpointResponse.updated_at:type_name -> google.protobuf.Timestamp
	5, // 1: trustflow.issues_timeline.v1.TimelineItem.created_at:type_name -> google.protobuf.Timestamp
	2, // 2: trustflow.issues_timeline.v1.AppendBatchRequest.items:type_name -> trustflow.issues_timeline.v1.TimelineItem
	0, // 3: trustflow.issues_timeline.v1.IssuesTimelineService.GetCheckpoint:input_type -> trustflow.issues_timeline.v1.GetCheckpointRequest
	3, // 4: trustflow.issues_timeline.v1.IssuesTimelineService.AppendBatch:input_type -> trustflow.issues_timeline.v1.AppendBatchRequest
	1, // 5: trustflow.issues_timeline.v1.IssuesTimelineService.GetCheckpoint:output_type -> trustflow.issues_timeline.v1.GetCheckpointResponse
	4, // 6: trustflow.issues_timeline.v1.IssuesTimelineService.AppendBatch:output_type -> trustflow.issues_timeline.v1.AppendBatchResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_issue_timeline_proto_init() }
func file_issue_timeline_proto_init() {
	if File_issue_timeline_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_issue_timeline_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_timeline_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetCheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_timeline_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TimelineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_timeline_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AppendBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_timeline_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*AppendBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_issue_timeline_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_issue_timeline_proto_goTypes,
		DependencyIndexes: file_issue_timeline_proto_depIdxs,
		MessageInfos:      file_issue_timeline_proto_msgTypes,
	}.Build()
	File_issue_timeline_proto = out.File
	file_issue_timeline_proto_rawDesc = nil
	file_issue_timeline_proto_goTypes = nil
	file_issue_timeline_proto_depIdxs = nil
}
