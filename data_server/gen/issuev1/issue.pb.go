// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: issue.proto

package issuev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{0}
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{1}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Issue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // uuid of our row
	CreatedAt string `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // RFC3339
	UpdatedAt string `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // RFC3339
	// Relations
	ProjectId string `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"` // trustflow.project.v1.Project.id
	UserId    string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // creator / owner scope
	// Repo coordinates (copied from Ownership)
	Organization string `protobuf:"bytes,6,opt,name=organization,proto3" json:"organization,omitempty"`
	Repository   string `protobuf:"bytes,7,opt,name=repository,proto3" json:"repository,omitempty"`
	// GitHub identifiers & display
	GhIssueId   int64    `protobuf:"varint,8,opt,name=gh_issue_id,json=ghIssueId,proto3" json:"gh_issue_id,omitempty"` // global GH ID (dedupe key)
	GhNumber    int32    `protobuf:"varint,9,opt,name=gh_number,json=ghNumber,proto3" json:"gh_number,omitempty"`      // repo-local number (#123)
	Title       string   `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	State       string   `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"` // "open"/"closed"
	HtmlUrl     string   `protobuf:"bytes,12,opt,name=html_url,json=htmlUrl,proto3" json:"html_url,omitempty"`
	UserLogin   string   `protobuf:"bytes,13,opt,name=user_login,json=userLogin,proto3" json:"user_login,omitempty"` // opener/author
	Labels      []string `protobuf:"bytes,14,rep,name=labels,proto3" json:"labels,omitempty"`
	GhCreatedAt string   `protobuf:"bytes,15,opt,name=gh_created_at,json=ghCreatedAt,proto3" json:"gh_created_at,omitempty"` // RFC3339 from GH
	GhUpdatedAt string   `protobuf:"bytes,16,opt,name=gh_updated_at,json=ghUpdatedAt,proto3" json:"gh_updated_at,omitempty"` // RFC3339 from GH
}

func (x *Issue) Reset() {
	*x = Issue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{2}
}

func (x *Issue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Issue) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Issue) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Issue) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Issue) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Issue) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *Issue) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *Issue) GetGhIssueId() int64 {
	if x != nil {
		return x.GhIssueId
	}
	return 0
}

func (x *Issue) GetGhNumber() int32 {
	if x != nil {
		return x.GhNumber
	}
	return 0
}

func (x *Issue) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Issue) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Issue) GetHtmlUrl() string {
	if x != nil {
		return x.HtmlUrl
	}
	return ""
}

func (x *Issue) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *Issue) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Issue) GetGhCreatedAt() string {
	if x != nil {
		return x.GhCreatedAt
	}
	return ""
}

func (x *Issue) GetGhUpdatedAt() string {
	if x != nil {
		return x.GhUpdatedAt
	}
	return ""
}

// Import selected issues (idempotent on (project_id, gh_issue_id))
type ImportIssuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string                          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string                          `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Issues    []*ImportIssuesRequest_Selected `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"` // the selection from the API
}

func (x *ImportIssuesRequest) Reset() {
	*x = ImportIssuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportIssuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportIssuesRequest) ProtoMessage() {}

func (x *ImportIssuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportIssuesRequest.ProtoReflect.Descriptor instead.
func (*ImportIssuesRequest) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{3}
}

func (x *ImportIssuesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ImportIssuesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ImportIssuesRequest) GetIssues() []*ImportIssuesRequest_Selected {
	if x != nil {
		return x.Issues
	}
	return nil
}

type ImportIssuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imported   []*Issue `protobuf:"bytes,1,rep,name=imported,proto3" json:"imported,omitempty"`      // only newly-inserted
	Duplicates int32    `protobuf:"varint,2,opt,name=duplicates,proto3" json:"duplicates,omitempty"` // how many were already present
}

func (x *ImportIssuesResponse) Reset() {
	*x = ImportIssuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportIssuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportIssuesResponse) ProtoMessage() {}

func (x *ImportIssuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportIssuesResponse.ProtoReflect.Descriptor instead.
func (*ImportIssuesResponse) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{4}
}

func (x *ImportIssuesResponse) GetImported() []*Issue {
	if x != nil {
		return x.Imported
	}
	return nil
}

func (x *ImportIssuesResponse) GetDuplicates() int32 {
	if x != nil {
		return x.Duplicates
	}
	return 0
}

// List issues already imported for the project
type ListIssuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListIssuesRequest) Reset() {
	*x = ListIssuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIssuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssuesRequest) ProtoMessage() {}

func (x *ListIssuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssuesRequest.ProtoReflect.Descriptor instead.
func (*ListIssuesRequest) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{5}
}

func (x *ListIssuesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListIssuesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListIssuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issues []*Issue `protobuf:"bytes,1,rep,name=issues,proto3" json:"issues,omitempty"`
}

func (x *ListIssuesResponse) Reset() {
	*x = ListIssuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIssuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIssuesResponse) ProtoMessage() {}

func (x *ListIssuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIssuesResponse.ProtoReflect.Descriptor instead.
func (*ListIssuesResponse) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{6}
}

func (x *ListIssuesResponse) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

type ExistsByGhIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhIssueId int64 `protobuf:"varint,1,opt,name=gh_issue_id,json=ghIssueId,proto3" json:"gh_issue_id,omitempty"`
}

func (x *ExistsByGhIDRequest) Reset() {
	*x = ExistsByGhIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsByGhIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsByGhIDRequest) ProtoMessage() {}

func (x *ExistsByGhIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsByGhIDRequest.ProtoReflect.Descriptor instead.
func (*ExistsByGhIDRequest) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{7}
}

func (x *ExistsByGhIDRequest) GetGhIssueId() int64 {
	if x != nil {
		return x.GhIssueId
	}
	return 0
}

type ExistsByGhIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *ExistsByGhIDResponse) Reset() {
	*x = ExistsByGhIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistsByGhIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistsByGhIDResponse) ProtoMessage() {}

func (x *ExistsByGhIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistsByGhIDResponse.ProtoReflect.Descriptor instead.
func (*ExistsByGhIDResponse) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{8}
}

func (x *ExistsByGhIDResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type ImportIssuesRequest_Selected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`         // GitHub global issue ID
	Number      int32    `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"` // repo-local number (#123)
	Title       string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	State       string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	HtmlUrl     string   `protobuf:"bytes,5,opt,name=html_url,json=htmlUrl,proto3" json:"html_url,omitempty"`
	UserLogin   string   `protobuf:"bytes,6,opt,name=user_login,json=userLogin,proto3" json:"user_login,omitempty"`
	Labels      []string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
	GhCreatedAt string   `protobuf:"bytes,8,opt,name=gh_created_at,json=ghCreatedAt,proto3" json:"gh_created_at,omitempty"` // RFC3339
	GhUpdatedAt string   `protobuf:"bytes,9,opt,name=gh_updated_at,json=ghUpdatedAt,proto3" json:"gh_updated_at,omitempty"` // RFC3339
}

func (x *ImportIssuesRequest_Selected) Reset() {
	*x = ImportIssuesRequest_Selected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issue_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportIssuesRequest_Selected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportIssuesRequest_Selected) ProtoMessage() {}

func (x *ImportIssuesRequest_Selected) ProtoReflect() protoreflect.Message {
	mi := &file_issue_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportIssuesRequest_Selected.ProtoReflect.Descriptor instead.
func (*ImportIssuesRequest_Selected) Descriptor() ([]byte, []int) {
	return file_issue_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ImportIssuesRequest_Selected) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ImportIssuesRequest_Selected) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ImportIssuesRequest_Selected) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ImportIssuesRequest_Selected) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ImportIssuesRequest_Selected) GetHtmlUrl() string {
	if x != nil {
		return x.HtmlUrl
	}
	return ""
}

func (x *ImportIssuesRequest_Selected) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *ImportIssuesRequest_Selected) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ImportIssuesRequest_Selected) GetGhCreatedAt() string {
	if x != nil {
		return x.GhCreatedAt
	}
	return ""
}

func (x *ImportIssuesRequest_Selected) GetGhUpdatedAt() string {
	if x != nil {
		return x.GhUpdatedAt
	}
	return ""
}

var File_issue_proto protoreflect.FileDescriptor

var file_issue_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x76,
	0x31, 0x22, 0x0f, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x28, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd4, 0x03, 0x0a,
	0x05, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x68, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x68, 0x49, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x68, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x68, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x74, 0x6d,
	0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x6d,
	0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x67,
	0x68, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x67, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x67, 0x68, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x92, 0x03, 0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x1a, 0xf8, 0x01,
	0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x68, 0x74, 0x6d, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x68, 0x74, 0x6d, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x22, 0x0a, 0x0d, 0x67, 0x68, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x68, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x68, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6d, 0x0a, 0x14, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x08, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x75, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x22, 0x35, 0x0a,
	0x13, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x47, 0x68, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x68, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x68, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79,
	0x47, 0x68, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x32, 0x82, 0x03, 0x0a, 0x0c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x21, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x42, 0x79, 0x47, 0x68, 0x49, 0x44, 0x12, 0x27, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x42, 0x79, 0x47, 0x68, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x42, 0x79, 0x47, 0x68, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x75, 0x73, 0x70, 0x6c, 0x75, 0x73, 0x62,
	0x75, 0x73, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x76, 0x31, 0x3b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_issue_proto_rawDescOnce sync.Once
	file_issue_proto_rawDescData = file_issue_proto_rawDesc
)

func file_issue_proto_rawDescGZIP() []byte {
	file_issue_proto_rawDescOnce.Do(func() {
		file_issue_proto_rawDescData = protoimpl.X.CompressGZIP(file_issue_proto_rawDescData)
	})
	return file_issue_proto_rawDescData
}

var file_issue_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_issue_proto_goTypes = []any{
	(*HealthRequest)(nil),                // 0: trustflow.issue.v1.HealthRequest
	(*HealthResponse)(nil),               // 1: trustflow.issue.v1.HealthResponse
	(*Issue)(nil),                        // 2: trustflow.issue.v1.Issue
	(*ImportIssuesRequest)(nil),          // 3: trustflow.issue.v1.ImportIssuesRequest
	(*ImportIssuesResponse)(nil),         // 4: trustflow.issue.v1.ImportIssuesResponse
	(*ListIssuesRequest)(nil),            // 5: trustflow.issue.v1.ListIssuesRequest
	(*ListIssuesResponse)(nil),           // 6: trustflow.issue.v1.ListIssuesResponse
	(*ExistsByGhIDRequest)(nil),          // 7: trustflow.issue.v1.ExistsByGhIDRequest
	(*ExistsByGhIDResponse)(nil),         // 8: trustflow.issue.v1.ExistsByGhIDResponse
	(*ImportIssuesRequest_Selected)(nil), // 9: trustflow.issue.v1.ImportIssuesRequest.Selected
}
var file_issue_proto_depIdxs = []int32{
	9, // 0: trustflow.issue.v1.ImportIssuesRequest.issues:type_name -> trustflow.issue.v1.ImportIssuesRequest.Selected
	2, // 1: trustflow.issue.v1.ImportIssuesResponse.imported:type_name -> trustflow.issue.v1.Issue
	2, // 2: trustflow.issue.v1.ListIssuesResponse.issues:type_name -> trustflow.issue.v1.Issue
	0, // 3: trustflow.issue.v1.IssueService.Health:input_type -> trustflow.issue.v1.HealthRequest
	3, // 4: trustflow.issue.v1.IssueService.ImportIssues:input_type -> trustflow.issue.v1.ImportIssuesRequest
	5, // 5: trustflow.issue.v1.IssueService.ListIssues:input_type -> trustflow.issue.v1.ListIssuesRequest
	7, // 6: trustflow.issue.v1.IssueService.ExistsByGhID:input_type -> trustflow.issue.v1.ExistsByGhIDRequest
	1, // 7: trustflow.issue.v1.IssueService.Health:output_type -> trustflow.issue.v1.HealthResponse
	4, // 8: trustflow.issue.v1.IssueService.ImportIssues:output_type -> trustflow.issue.v1.ImportIssuesResponse
	6, // 9: trustflow.issue.v1.IssueService.ListIssues:output_type -> trustflow.issue.v1.ListIssuesResponse
	8, // 10: trustflow.issue.v1.IssueService.ExistsByGhID:output_type -> trustflow.issue.v1.ExistsByGhIDResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_issue_proto_init() }
func file_issue_proto_init() {
	if File_issue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_issue_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Issue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ImportIssuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ImportIssuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListIssuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListIssuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ExistsByGhIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ExistsByGhIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issue_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ImportIssuesRequest_Selected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_issue_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_issue_proto_goTypes,
		DependencyIndexes: file_issue_proto_depIdxs,
		MessageInfos:      file_issue_proto_msgTypes,
	}.Build()
	File_issue_proto = out.File
	file_issue_proto_rawDesc = nil
	file_issue_proto_goTypes = nil
	file_issue_proto_depIdxs = nil
}
