// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: bucket.proto

package bucketv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// trustflow.buckets.v1
type Scope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityKind string `protobuf:"bytes,1,opt,name=entity_kind,json=entityKind,proto3" json:"entity_kind,omitempty"`
	EntityKey  string `protobuf:"bytes,2,opt,name=entity_key,json=entityKey,proto3" json:"entity_key,omitempty"`
}

func (x *Scope) Reset() {
	*x = Scope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scope) ProtoMessage() {}

func (x *Scope) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scope.ProtoReflect.Descriptor instead.
func (*Scope) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{0}
}

func (x *Scope) GetEntityKind() string {
	if x != nil {
		return x.EntityKind
	}
	return ""
}

func (x *Scope) GetEntityKey() string {
	if x != nil {
		return x.EntityKey
	}
	return ""
}

type BucketRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope     *Scope `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	BucketKey string `protobuf:"bytes,2,opt,name=bucket_key,json=bucketKey,proto3" json:"bucket_key,omitempty"`
}

func (x *BucketRef) Reset() {
	*x = BucketRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketRef) ProtoMessage() {}

func (x *BucketRef) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketRef.ProtoReflect.Descriptor instead.
func (*BucketRef) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{1}
}

func (x *BucketRef) GetScope() *Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *BucketRef) GetBucketKey() string {
	if x != nil {
		return x.BucketKey
	}
	return ""
}

type BucketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref        *BucketRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	RootHash   []byte     `protobuf:"bytes,2,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	LeafCount  uint32     `protobuf:"varint,3,opt,name=leaf_count,json=leafCount,proto3" json:"leaf_count,omitempty"`
	Status     string     `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                           // open|closed|needs_anchoring|anchored
	Cid        string     `protobuf:"bytes,5,opt,name=cid,proto3" json:"cid,omitempty"`                                 // set by runner
	AnchoredTx string     `protobuf:"bytes,6,opt,name=anchored_tx,json=anchoredTx,proto3" json:"anchored_tx,omitempty"` // set by runner
	AnchoredAt string     `protobuf:"bytes,7,opt,name=anchored_at,json=anchoredAt,proto3" json:"anchored_at,omitempty"` // RFC3339
	ClosedAt   string     `protobuf:"bytes,8,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`       // RFC3339
}

func (x *BucketInfo) Reset() {
	*x = BucketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BucketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BucketInfo) ProtoMessage() {}

func (x *BucketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BucketInfo.ProtoReflect.Descriptor instead.
func (*BucketInfo) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{2}
}

func (x *BucketInfo) GetRef() *BucketRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *BucketInfo) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

func (x *BucketInfo) GetLeafCount() uint32 {
	if x != nil {
		return x.LeafCount
	}
	return 0
}

func (x *BucketInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BucketInfo) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *BucketInfo) GetAnchoredTx() string {
	if x != nil {
		return x.AnchoredTx
	}
	return ""
}

func (x *BucketInfo) GetAnchoredAt() string {
	if x != nil {
		return x.AnchoredAt
	}
	return ""
}

func (x *BucketInfo) GetClosedAt() string {
	if x != nil {
		return x.ClosedAt
	}
	return ""
}

type ListBucketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope     *Scope `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Limit     int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListBucketsRequest) Reset() {
	*x = ListBucketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsRequest) ProtoMessage() {}

func (x *ListBucketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsRequest.ProtoReflect.Descriptor instead.
func (*ListBucketsRequest) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{3}
}

func (x *ListBucketsRequest) GetScope() *Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *ListBucketsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListBucketsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListBucketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets       []*BucketInfo `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
	NextPageToken string        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListBucketsResponse) Reset() {
	*x = ListBucketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBucketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBucketsResponse) ProtoMessage() {}

func (x *ListBucketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBucketsResponse.ProtoReflect.Descriptor instead.
func (*ListBucketsResponse) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{4}
}

func (x *ListBucketsResponse) GetBuckets() []*BucketInfo {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *ListBucketsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *BucketRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *GetBucketRequest) Reset() {
	*x = GetBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketRequest) ProtoMessage() {}

func (x *GetBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketRequest.ProtoReflect.Descriptor instead.
func (*GetBucketRequest) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{5}
}

func (x *GetBucketRequest) GetRef() *BucketRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type GetBucketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket *BucketInfo `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *GetBucketResponse) Reset() {
	*x = GetBucketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBucketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBucketResponse) ProtoMessage() {}

func (x *GetBucketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBucketResponse.ProtoReflect.Descriptor instead.
func (*GetBucketResponse) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{6}
}

func (x *GetBucketResponse) GetBucket() *BucketInfo {
	if x != nil {
		return x.Bucket
	}
	return nil
}

type InclusionProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref             *BucketRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	ProviderEventId string     `protobuf:"bytes,2,opt,name=provider_event_id,json=providerEventId,proto3" json:"provider_event_id,omitempty"`
}

func (x *InclusionProofRequest) Reset() {
	*x = InclusionProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InclusionProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InclusionProofRequest) ProtoMessage() {}

func (x *InclusionProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InclusionProofRequest.ProtoReflect.Descriptor instead.
func (*InclusionProofRequest) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{7}
}

func (x *InclusionProofRequest) GetRef() *BucketRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *InclusionProofRequest) GetProviderEventId() string {
	if x != nil {
		return x.ProviderEventId
	}
	return ""
}

type InclusionProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeafHash []byte                         `protobuf:"bytes,1,opt,name=leaf_hash,json=leafHash,proto3" json:"leaf_hash,omitempty"`
	Path     []*InclusionProofResponse_Step `protobuf:"bytes,2,rep,name=path,proto3" json:"path,omitempty"`
	RootHash []byte                         `protobuf:"bytes,3,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
}

func (x *InclusionProofResponse) Reset() {
	*x = InclusionProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InclusionProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InclusionProofResponse) ProtoMessage() {}

func (x *InclusionProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InclusionProofResponse.ProtoReflect.Descriptor instead.
func (*InclusionProofResponse) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{8}
}

func (x *InclusionProofResponse) GetLeafHash() []byte {
	if x != nil {
		return x.LeafHash
	}
	return nil
}

func (x *InclusionProofResponse) GetPath() []*InclusionProofResponse_Step {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *InclusionProofResponse) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

// Runner-facing (ledger will call these)
type MarkBucketClosedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref *BucketRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *MarkBucketClosedRequest) Reset() {
	*x = MarkBucketClosedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkBucketClosedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkBucketClosedRequest) ProtoMessage() {}

func (x *MarkBucketClosedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkBucketClosedRequest.ProtoReflect.Descriptor instead.
func (*MarkBucketClosedRequest) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{9}
}

func (x *MarkBucketClosedRequest) GetRef() *BucketRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

type MarkBucketClosedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket *BucketInfo `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *MarkBucketClosedResponse) Reset() {
	*x = MarkBucketClosedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkBucketClosedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkBucketClosedResponse) ProtoMessage() {}

func (x *MarkBucketClosedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkBucketClosedResponse.ProtoReflect.Descriptor instead.
func (*MarkBucketClosedResponse) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{10}
}

func (x *MarkBucketClosedResponse) GetBucket() *BucketInfo {
	if x != nil {
		return x.Bucket
	}
	return nil
}

type SetBucketAnchoredRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref        *BucketRef `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Cid        string     `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	AnchoredTx string     `protobuf:"bytes,3,opt,name=anchored_tx,json=anchoredTx,proto3" json:"anchored_tx,omitempty"`
}

func (x *SetBucketAnchoredRequest) Reset() {
	*x = SetBucketAnchoredRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBucketAnchoredRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBucketAnchoredRequest) ProtoMessage() {}

func (x *SetBucketAnchoredRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBucketAnchoredRequest.ProtoReflect.Descriptor instead.
func (*SetBucketAnchoredRequest) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{11}
}

func (x *SetBucketAnchoredRequest) GetRef() *BucketRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *SetBucketAnchoredRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *SetBucketAnchoredRequest) GetAnchoredTx() string {
	if x != nil {
		return x.AnchoredTx
	}
	return ""
}

type SetBucketAnchoredResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket *BucketInfo `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *SetBucketAnchoredResponse) Reset() {
	*x = SetBucketAnchoredResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBucketAnchoredResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBucketAnchoredResponse) ProtoMessage() {}

func (x *SetBucketAnchoredResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBucketAnchoredResponse.ProtoReflect.Descriptor instead.
func (*SetBucketAnchoredResponse) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{12}
}

func (x *SetBucketAnchoredResponse) GetBucket() *BucketInfo {
	if x != nil {
		return x.Bucket
	}
	return nil
}

type InclusionProofResponse_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sibling       []byte `protobuf:"bytes,1,opt,name=sibling,proto3" json:"sibling,omitempty"`
	SiblingIsLeft bool   `protobuf:"varint,2,opt,name=sibling_is_left,json=siblingIsLeft,proto3" json:"sibling_is_left,omitempty"`
}

func (x *InclusionProofResponse_Step) Reset() {
	*x = InclusionProofResponse_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bucket_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InclusionProofResponse_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InclusionProofResponse_Step) ProtoMessage() {}

func (x *InclusionProofResponse_Step) ProtoReflect() protoreflect.Message {
	mi := &file_bucket_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InclusionProofResponse_Step.ProtoReflect.Descriptor instead.
func (*InclusionProofResponse_Step) Descriptor() ([]byte, []int) {
	return file_bucket_proto_rawDescGZIP(), []int{8, 0}
}

func (x *InclusionProofResponse_Step) GetSibling() []byte {
	if x != nil {
		return x.Sibling
	}
	return nil
}

func (x *InclusionProofResponse_Step) GetSiblingIsLeft() bool {
	if x != nil {
		return x.SiblingIsLeft
	}
	return false
}

var File_bucket_proto protoreflect.FileDescriptor

var file_bucket_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x22, 0x47, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x22, 0x5c, 0x0a, 0x09,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x66, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x83, 0x02, 0x0a, 0x0a, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x66,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x65,
	0x61, 0x66, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x78,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x64,
	0x54, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x7b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x78, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x4c, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x75, 0x0a, 0x15, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x6c, 0x65, 0x61, 0x66, 0x48, 0x61, 0x73, 0x68, 0x12, 0x44, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x48, 0x0a,
	0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x73, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e,
	0x67, 0x49, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x22, 0x4b, 0x0a, 0x17, 0x4d, 0x61, 0x72, 0x6b, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x66, 0x52,
	0x03, 0x72, 0x65, 0x66, 0x22, 0x53, 0x0a, 0x18, 0x4d, 0x61, 0x72, 0x6b, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x7f, 0x0a, 0x18, 0x53, 0x65, 0x74,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x64, 0x54, 0x78, 0x22, 0x54, 0x0a, 0x19, 0x53, 0x65,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x32, 0x9d, 0x04, 0x0a, 0x0d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x60, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x27, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x25, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x69, 0x0a, 0x0e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x2a, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x10, 0x4d,
	0x61, 0x72, 0x6b, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12,
	0x2c, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65,
	0x64, 0x12, 0x2d, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x75, 0x73, 0x70, 0x6c, 0x75, 0x73, 0x62, 0x75, 0x73, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x76, 0x31, 0x3b, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bucket_proto_rawDescOnce sync.Once
	file_bucket_proto_rawDescData = file_bucket_proto_rawDesc
)

func file_bucket_proto_rawDescGZIP() []byte {
	file_bucket_proto_rawDescOnce.Do(func() {
		file_bucket_proto_rawDescData = protoimpl.X.CompressGZIP(file_bucket_proto_rawDescData)
	})
	return file_bucket_proto_rawDescData
}

var file_bucket_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_bucket_proto_goTypes = []any{
	(*Scope)(nil),                       // 0: trustflow.bucket.v1.Scope
	(*BucketRef)(nil),                   // 1: trustflow.bucket.v1.BucketRef
	(*BucketInfo)(nil),                  // 2: trustflow.bucket.v1.BucketInfo
	(*ListBucketsRequest)(nil),          // 3: trustflow.bucket.v1.ListBucketsRequest
	(*ListBucketsResponse)(nil),         // 4: trustflow.bucket.v1.ListBucketsResponse
	(*GetBucketRequest)(nil),            // 5: trustflow.bucket.v1.GetBucketRequest
	(*GetBucketResponse)(nil),           // 6: trustflow.bucket.v1.GetBucketResponse
	(*InclusionProofRequest)(nil),       // 7: trustflow.bucket.v1.InclusionProofRequest
	(*InclusionProofResponse)(nil),      // 8: trustflow.bucket.v1.InclusionProofResponse
	(*MarkBucketClosedRequest)(nil),     // 9: trustflow.bucket.v1.MarkBucketClosedRequest
	(*MarkBucketClosedResponse)(nil),    // 10: trustflow.bucket.v1.MarkBucketClosedResponse
	(*SetBucketAnchoredRequest)(nil),    // 11: trustflow.bucket.v1.SetBucketAnchoredRequest
	(*SetBucketAnchoredResponse)(nil),   // 12: trustflow.bucket.v1.SetBucketAnchoredResponse
	(*InclusionProofResponse_Step)(nil), // 13: trustflow.bucket.v1.InclusionProofResponse.Step
}
var file_bucket_proto_depIdxs = []int32{
	0,  // 0: trustflow.bucket.v1.BucketRef.scope:type_name -> trustflow.bucket.v1.Scope
	1,  // 1: trustflow.bucket.v1.BucketInfo.ref:type_name -> trustflow.bucket.v1.BucketRef
	0,  // 2: trustflow.bucket.v1.ListBucketsRequest.scope:type_name -> trustflow.bucket.v1.Scope
	2,  // 3: trustflow.bucket.v1.ListBucketsResponse.buckets:type_name -> trustflow.bucket.v1.BucketInfo
	1,  // 4: trustflow.bucket.v1.GetBucketRequest.ref:type_name -> trustflow.bucket.v1.BucketRef
	2,  // 5: trustflow.bucket.v1.GetBucketResponse.bucket:type_name -> trustflow.bucket.v1.BucketInfo
	1,  // 6: trustflow.bucket.v1.InclusionProofRequest.ref:type_name -> trustflow.bucket.v1.BucketRef
	13, // 7: trustflow.bucket.v1.InclusionProofResponse.path:type_name -> trustflow.bucket.v1.InclusionProofResponse.Step
	1,  // 8: trustflow.bucket.v1.MarkBucketClosedRequest.ref:type_name -> trustflow.bucket.v1.BucketRef
	2,  // 9: trustflow.bucket.v1.MarkBucketClosedResponse.bucket:type_name -> trustflow.bucket.v1.BucketInfo
	1,  // 10: trustflow.bucket.v1.SetBucketAnchoredRequest.ref:type_name -> trustflow.bucket.v1.BucketRef
	2,  // 11: trustflow.bucket.v1.SetBucketAnchoredResponse.bucket:type_name -> trustflow.bucket.v1.BucketInfo
	3,  // 12: trustflow.bucket.v1.BucketService.ListBuckets:input_type -> trustflow.bucket.v1.ListBucketsRequest
	5,  // 13: trustflow.bucket.v1.BucketService.GetBucket:input_type -> trustflow.bucket.v1.GetBucketRequest
	7,  // 14: trustflow.bucket.v1.BucketService.InclusionProof:input_type -> trustflow.bucket.v1.InclusionProofRequest
	9,  // 15: trustflow.bucket.v1.BucketService.MarkBucketClosed:input_type -> trustflow.bucket.v1.MarkBucketClosedRequest
	11, // 16: trustflow.bucket.v1.BucketService.SetBucketAnchored:input_type -> trustflow.bucket.v1.SetBucketAnchoredRequest
	4,  // 17: trustflow.bucket.v1.BucketService.ListBuckets:output_type -> trustflow.bucket.v1.ListBucketsResponse
	6,  // 18: trustflow.bucket.v1.BucketService.GetBucket:output_type -> trustflow.bucket.v1.GetBucketResponse
	8,  // 19: trustflow.bucket.v1.BucketService.InclusionProof:output_type -> trustflow.bucket.v1.InclusionProofResponse
	10, // 20: trustflow.bucket.v1.BucketService.MarkBucketClosed:output_type -> trustflow.bucket.v1.MarkBucketClosedResponse
	12, // 21: trustflow.bucket.v1.BucketService.SetBucketAnchored:output_type -> trustflow.bucket.v1.SetBucketAnchoredResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_bucket_proto_init() }
func file_bucket_proto_init() {
	if File_bucket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bucket_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Scope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BucketRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BucketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListBucketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListBucketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetBucketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*InclusionProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*InclusionProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*MarkBucketClosedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*MarkBucketClosedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SetBucketAnchoredRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*SetBucketAnchoredResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bucket_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*InclusionProofResponse_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bucket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bucket_proto_goTypes,
		DependencyIndexes: file_bucket_proto_depIdxs,
		MessageInfos:      file_bucket_proto_msgTypes,
	}.Build()
	File_bucket_proto = out.File
	file_bucket_proto_rawDesc = nil
	file_bucket_proto_goTypes = nil
	file_bucket_proto_depIdxs = nil
}
