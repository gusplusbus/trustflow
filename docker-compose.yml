services:
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  auth_db:
    image: postgres:15
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_DB=${AUTH_DB_NAME}
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${AUTH_DB_USER} -d $${AUTH_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build: ./api
    ports:
      - "8080:8080"
    volumes:
      - ./api:/app
    working_dir: /app
    command: go run ./cmd/main.go
    depends_on:
      db:
        condition: service_healthy
      data_server:
        condition: service_started
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}

  auth_server:
    build: ./auth_server
    ports:
      - "4000:4000"
    volumes:
      - ./auth_server:/app
    working_dir: /app
    depends_on:
      auth_db:
        condition: service_healthy
    restart: always
    env_file:
      - .env
    environment:
      - DATABASE_URL=${AUTH_DATABASE_URL}

  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./webapp:/app
    working_dir: /app
    command: yarn dev
    depends_on:
      api:
        condition: service_started

  node-chain:
    build: ./blockchain-node
    ports:
      - "3000:3000"
    volumes:
      - ./blockchain-node:/app
    working_dir: /app
    command: npm run start
    env_file:
      - .env
    environment:
      - RPC_URL=${RPC_URL}
      - PRIVATE_KEY=${PRIVATE_KEY}
  
  data_server:
    build: ./data_server
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - GRPC_ADDR=:9090
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "9090"

volumes:
  pgdata:
  auth_pgdata:
